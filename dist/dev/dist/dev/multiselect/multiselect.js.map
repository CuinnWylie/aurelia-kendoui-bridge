{"version":3,"sources":["multiselect/multiselect.js"],"names":["getSelectNode","element","querySelectorAll","inject","Container","customElement","bindable","WidgetBase","generateBindables","constants","Multiselect","elementPrefix","Element","widgetBase","container","control","useRootElement","linkViewModel","useContainer","bindToKendo","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoValueBinding","useValueBinding","kNoInit","recreate","selectNodes","useElement","length","templates","util","getChildrenVMs","useTemplates","kWidget","propertyChanged","property","newValue","oldValue","input","val","handlePropertyChanged","destroy","detached"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,WAAOA,QAAQC,gBAAR,CAAyB,QAAzB,CAAP;AACD;;;AAxEOC,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;AAAeC,c,sBAAAA,Q;;AACfC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;6BAKKC,W,WAHZL,cAAiBI,UAAUE,aAA3B,iB,UACAH,kBAAkB,kBAAlB,EAAsC,CAAC,UAAD,CAAtC,C,UACAL,OAAOS,OAAP,EAAgBL,UAAhB,EAA4BH,SAA5B,C;AAOC,6BAAYH,OAAZ,EAAqBY,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAAA;;AAAA;;AAAA;;AAC1C,eAAKb,OAAL,GAAeA,OAAf;AACA,eAAKY,UAAL,GAAkBA,WACGE,OADH,CACW,kBADX,EAEGC,cAFH,CAEkB,KAAKf,OAFvB,EAGGgB,aAHH,CAGiB,IAHjB,EAIGC,YAJH,CAIgBJ,SAJhB,EAKGK,WALH,CAKe,UALf,EAK2B,QAL3B,EAMGA,WANH,CAMe,WANf,EAM4B,UAN5B,CAAlB;AAOD;;8BAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKT,UAAL,CAAgBO,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;8BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKZ,UAAL,CAAgBa,YAAhB,CAA6BD,WAA7B;AACD,S;;8BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,eAAV,EAA2B;AACzB,iBAAKf,UAAL,CAAgBgB,eAAhB;AACD;;AAED,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;8BAEDA,Q,uBAAW;AACT,cAAIC,cAAchC,cAAc,KAAKC,OAAnB,CAAlB;AACA,eAAKY,UAAL,CAAgBoB,UAAhB,CAA2BD,YAAYE,MAAZ,GAAqB,CAArB,GAAyBF,YAAY,CAAZ,CAAzB,GAA0C,KAAK/B,OAA1E;;AAEA,cAAIkC,YAAY,KAAKtB,UAAL,CAAgBuB,IAAhB,CAAqBC,cAArB,CAAoC,KAAKpC,OAAzC,EAAqDQ,UAAUE,aAA/D,cAAhB;AACA,eAAKE,UAAL,CAAgByB,YAAhB,CAA6B,IAA7B,EAAmC,kBAAnC,EAAuDH,SAAvD;;AAEA,eAAKI,OAAL,GAAe,KAAK1B,UAAL,CAAgBkB,QAAhB,EAAf;AACD,S;;8BAEDS,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAE5C,cAAIF,aAAa,QAAb,IAAyB,KAAKF,OAAL,CAAaK,KAAb,CAAmBC,GAAnB,OAA6B,EAA1D,EAA8D;AAC5D,iBAAKhC,UAAL,CAAgBiC,qBAAhB,CAAsC,KAAKP,OAA3C,EAAoDE,QAApD,EAA8DC,QAA9D,EAAwEC,QAAxE;AACD;AACF,S;;8BAEDI,O,sBAAU;AACR,eAAKlC,UAAL,CAAgBkC,OAAhB,CAAwB,KAAKR,OAA7B;AACD,S;;8BAEDS,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S;;;oFAxDAzC,Q;;;oFACAA,Q;;;0FACAA,Q;;;iBAA2B,K","file":"multiselect/multiselect.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement, bindable} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}multiselect`)\r\n@generateBindables('kendoMultiSelect', ['template'])\r\n@inject(Element, WidgetBase, Container)\r\nexport class Multiselect {\r\n\r\n  @bindable kEnabled;\r\n  @bindable kReadOnly;\r\n  @bindable kNoValueBinding = false;\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoMultiSelect')\r\n                        .useRootElement(this.element)\r\n                        .linkViewModel(this)\r\n                        .useContainer(container)\r\n                        .bindToKendo('kEnabled', 'enable')\r\n                        .bindToKendo('kReadOnly', 'readonly');\r\n  }\r\n\r\n  subscribe(event, callback) {\r\n    return this.widgetBase.subscribe(event, callback);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoValueBinding) {\r\n      this.widgetBase.useValueBinding();\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let selectNodes = getSelectNode(this.element);\r\n    this.widgetBase.useElement(selectNodes.length > 0 ? selectNodes[0] : this.element);\r\n\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoMultiSelect', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  propertyChanged(property, newValue, oldValue) {\r\n    // do not process value changes when user input is present\r\n    if (property !== 'kValue' || this.kWidget.input.val() === '') {\r\n      this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\nfunction getSelectNode(element) {\r\n  return element.querySelectorAll('select');\r\n}\r\n"]}