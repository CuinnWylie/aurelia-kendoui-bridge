{"version":3,"sources":["upload/upload.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAQ,Y,+BAAA,M;AAAQ,e,+BAAA,S;;AACR,mB,sBAAA,a;;AACA,gB,qBAAA,U;;AACA,uB,qBAAA,iB;;AACA,e,oBAAA,S;;;wBAKK,M,WAHZ,cAAiB,UAAU,aAA3B,Y,UACA,kBAAkB,aAAlB,C,UACA,OAAO,OAAP,EAAgB,UAAhB,EAA4B,SAA5B,C;AAGC,wBAAY,OAAZ,EAAqB,UAArB,EAAiC,SAAjC,EAA4C;AAAA;;AAC1C,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,UAAL,GAAkB,WACG,OADH,CACW,aADX,EAEG,cAFH,CAEkB,KAAK,OAFvB,EAGG,aAHH,CAGiB,IAHjB,EAIG,YAJH,CAIgB,SAJhB,CAAlB;AAKD;;yBAED,I,iBAAK,G,EAAK,W,EAAa;AACrB,eAAK,UAAL,CAAgB,YAAhB,CAA6B,WAA7B;AACD,S;;yBAED,Q,uBAAW;AACT,cAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,iBAAK,QAAL;AACD;AACF,S;;yBAED,Q,uBAAW;AACT,cAAI,eAAJ;AACA,cAAI,SAAS,KAAK,OAAL,CAAa,gBAAb,CAA8B,OAA9B,CAAb;AACA,cAAI,OAAO,MAAP,GAAgB,CAApB,EAAuB;AACrB,qBAAS,OAAO,CAAP,CAAT;AACD,WAFD,MAEO;AACL,qBAAS,SAAS,aAAT,CAAuB,OAAvB,CAAT;AACA,iBAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;AACD;;AAED,eAAK,UAAL,CAAgB,UAAhB,CAA2B,MAA3B;;AAEA,cAAI,YAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB,CAAoC,KAAK,OAAzC,EAAqD,UAAU,aAA/D,cAAhB;AACA,eAAK,UAAL,CAAgB,YAAhB,CAA6B,IAA7B,EAAmC,aAAnC,EAAkD,SAAlD;;AAEA,eAAK,OAAL,GAAe,KAAK,UAAL,CAAgB,QAAhB,EAAf;AACD,S;;yBAED,O,sBAAU;AACR,eAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAA7B;AACD,S;;yBAED,Q,uBAAW;AACT,eAAK,OAAL;AACD,S","file":"upload/upload.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}upload`)\r\n@generateBindables('kendoUpload')\r\n@inject(Element, WidgetBase, Container)\r\nexport class Upload {\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoUpload')\r\n                        .useRootElement(this.element)\r\n                        .linkViewModel(this)\r\n                        .useContainer(container);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let target;\r\n    let inputs = this.element.querySelectorAll('input');\r\n    if (inputs.length > 0) {\r\n      target = inputs[0];\r\n    } else {\r\n      target = document.createElement('input');\r\n      this.element.appendChild(target);\r\n    }\r\n\r\n    this.widgetBase.useElement(target);\r\n\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoUpload', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n"]}