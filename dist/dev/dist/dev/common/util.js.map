{"version":3,"sources":["common/util.js"],"names":[],"mappings":"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","file":"common/util.js","sourceRoot":"/source/","sourcesContent":["const capitalMatcher = /([A-Z])/g;\r\nimport {constants} from './constants';\r\n\r\n/**\r\n* Collection of useful functions used in multiple parts of the plugin\r\n*/\r\nexport class Util {\r\n\r\n  /**\r\n  * prepends hyphen and lowercases the input char\r\n  * @param char the char to add an hyphen in front for\r\n  */\r\n  addHyphenAndLower(char: string): string {\r\n    return '-' + char.toLowerCase();\r\n  }\r\n\r\n  /**\r\n  * hyphenates a string\r\n  * kTest -> k-test\r\n  * @param name the string to hyphenate\r\n  */\r\n  _hyphenate(name: string): string {\r\n    return (name.charAt(0).toLowerCase() + name.slice(1)).replace(capitalMatcher, this.addHyphenAndLower);\r\n  }\r\n\r\n  /**\r\n  * unhyphenate's a string\r\n  * k-test -> kTest\r\n  */\r\n  _unhyphenate(name: string): string {\r\n    return name.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n  }\r\n\r\n  /**\r\n  * prepends prefix and unhyphenates the resulting string\r\n  * test -> kTest\r\n  */\r\n  getBindablePropertyName(propertyName: string): string {\r\n    let name = `${constants.bindablePrefix}${propertyName}`;\r\n\r\n    return this._unhyphenate(name);\r\n  }\r\n\r\n  /**\r\n  * removes prefix and unhyphenates the resulting string\r\n  * kTest -> test\r\n  */\r\n  getKendoPropertyName(propertyName: string): string {\r\n    let withoutPrefix = propertyName.substring(1); // remove 'k'\r\n\r\n    return (withoutPrefix.charAt(0).toLowerCase() + withoutPrefix.slice(1));\r\n  }\r\n\r\n  /**\r\n  * converts all attributes found on an element to matching Kendo events\r\n  * returns a list of these Kendo events\r\n  */\r\n  getEventsFromAttributes(element: Element): string[] {\r\n    let attributes = Array.prototype.slice.call(element.attributes);\r\n    let events: string[] = [];\r\n\r\n    for (let i = 0; i < attributes.length; i++) {\r\n      let attribute = attributes[i];\r\n      let attributeName = attribute.name;\r\n      if (!attributeName.startsWith(constants.eventPrefix)) continue;\r\n\r\n      // kendo-my-event.trigger -> my-event.trigger\r\n      let hyphenatedEvent = attributeName.split(constants.eventPrefix)[1];\r\n\r\n      // my-event.trigger -> my-event\r\n      let withoutTriggerDelegate = hyphenatedEvent.split('.')[0];\r\n\r\n      // my-event -> myEvent\r\n      let camelCased = this._unhyphenate(withoutTriggerDelegate);\r\n\r\n      events.push(camelCased);\r\n    }\r\n\r\n    return events;\r\n  }\r\n\r\n\r\n  /**\r\n  * Implicitly setting options to \"undefined\" for a kendo control can break things.\r\n  * this function prunes the supplied options object and removes values that\r\n  * aren't set to something explicit (i.e. not null)\r\n  * @param options the options object to prune the properties of\r\n  */\r\n  pruneOptions(options: any) {\r\n    let returnOptions = {};\r\n\r\n    for (let prop in options) {\r\n      if (this.hasValue(options[prop])) {\r\n        returnOptions[prop] = options[prop];\r\n      }\r\n    }\r\n\r\n    return returnOptions;\r\n  }\r\n\r\n  hasValue(prop) {\r\n    return typeof(prop) !== 'undefined' && prop !== null;\r\n  }\r\n\r\n  /**\r\n  * Fire DOM event on an element\r\n  * @param element The Element which the DOM event will be fired on\r\n  * @param name The Event's name\r\n  * @param data Addition data to attach to an event\r\n  */\r\n  fireEvent(element: Element, name: string, data = {}) {\r\n    let event = new CustomEvent(name, {\r\n      detail: data,\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n    element.dispatchEvent(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n  * Fire DOM event on an element with the k-on prefix\r\n  * @param element The Element which the DOM event will be fired on\r\n  * @param name The Event's name, without k-on prefix\r\n  * @param data Addition data to attach to an event\r\n  */\r\n  fireKendoEvent(element: Element, name: string, data = {}) {\r\n    return this.fireEvent(element, `${constants.eventPrefix}${name}`, data);\r\n  }\r\n\r\n  /**\r\n  * detection of template properties\r\n  */\r\n  isTemplateProperty(propertyName: string) {\r\n    return propertyName.toLowerCase().indexOf('template') > -1;\r\n  }\r\n\r\n  /**\r\n  * detection of objects\r\n  */\r\n  isObject(obj) {\r\n    return obj !== null && typeof(obj) === 'object';\r\n  }\r\n\r\n  getChildrenVMs(element, cssSelector) {\r\n    let elements = kendo.jQuery(element).children(cssSelector);\r\n    let viewModels = [];\r\n    elements.each((index, elem) => {\r\n      if (elem.au && elem.au.controller) {\r\n        viewModels.push(elem.au.controller.viewModel);\r\n      } else {\r\n        throw new Error(`au property not found on element ${elem.tagName}. Did you load this custom element via <require> or via main.js?`);\r\n      }\r\n    });\r\n    return viewModels;\r\n  }\r\n}\r\n"]}