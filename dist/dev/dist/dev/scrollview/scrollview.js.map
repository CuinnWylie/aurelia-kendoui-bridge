{"version":3,"sources":["scrollview/scrollview.js"],"names":[],"mappings":";;;;;;;;;;;;;AAuDA,WAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC9B,WAAO,QAAQ,gBAAR,CAAyB,KAAzB,EAAgC,MAAhC,GAAyC,CAAhD;AACD;;;AAzDO,Y,+BAAA,M;AAAQ,e,+BAAA,S;;AACR,mB,sBAAA,a;;AACA,gB,qBAAA,U;;AACA,uB,qBAAA,iB;;AACA,e,oBAAA,S;;;4BAKK,U,WAHZ,cAAiB,UAAU,aAA3B,gB,UACA,kBAAkB,uBAAlB,C,UACA,OAAO,OAAP,EAAgB,UAAhB,EAA4B,SAA5B,C;AAGC,4BAAY,OAAZ,EAAqB,UAArB,EAAiC,SAAjC,EAA4C;AAAA;;AAC1C,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,UAAL,GAAkB,WACG,OADH,CACW,uBADX,EAEG,cAFH,CAEkB,KAAK,OAFvB,EAGG,aAHH,CAGiB,IAHjB,EAIG,YAJH,CAIgB,SAJhB,EAKG,eALH,EAAlB;AAMD;;6BAED,I,iBAAK,G,EAAK,W,EAAa;AACrB,eAAK,UAAL,CAAgB,YAAhB,CAA6B,WAA7B;AACD,S;;6BAED,Q,uBAAW;AACT,cAAI,cAAc,KAAK,OAAnB,CAAJ,EAAiC;AAC/B,iBAAK,UAAL,CAAgB,UAAhB,CAA2B,KAAK,OAAL,CAAa,gBAAb,CAA8B,KAA9B,EAAqC,CAArC,CAA3B;AACD,WAFD,MAEO;AACL,gBAAI,SAAS,SAAS,aAAT,CAAuB,KAAvB,CAAb;AACA,iBAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;AACA,iBAAK,UAAL,CAAgB,UAAhB,CAA2B,MAA3B;AACD;;AAED,cAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,iBAAK,QAAL;AACD;AACF,S;;6BAED,Q,uBAAW;AACT,cAAI,YAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB,CAAoC,KAAK,OAAzC,EAAqD,UAAU,aAA/D,cAAhB;AACA,eAAK,UAAL,CAAgB,YAAhB,CAA6B,IAA7B,EAAmC,uBAAnC,EAA4D,SAA5D;;AAEA,eAAK,OAAL,GAAe,KAAK,UAAL,CAAgB,QAAhB,EAAf;AACD,S;;6BAED,O,sBAAU;AACR,eAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAA7B;AACD,S;;6BAED,Q,uBAAW;AACT,eAAK,OAAL;AACD,S","file":"scrollview/scrollview.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}scrollview`)\r\n@generateBindables('kendoMobileScrollView')\r\n@inject(Element, WidgetBase, Container)\r\nexport class Scrollview {\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoMobileScrollView')\r\n                        .useRootElement(this.element)\r\n                        .linkViewModel(this)\r\n                        .useContainer(container)\r\n                        .useValueBinding();\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (isInitFromDiv(this.element)) {\r\n      this.widgetBase.useElement(this.element.querySelectorAll('div')[0]);\r\n    } else {\r\n      let target = document.createElement('div');\r\n      this.element.appendChild(target);\r\n      this.widgetBase.useElement(target);\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoMobileScrollView', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\nfunction isInitFromDiv(element) {\r\n  return element.querySelectorAll('div').length > 0;\r\n}\r\n"]}