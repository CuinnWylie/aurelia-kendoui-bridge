{"version":3,"sources":["grid/grid.js"],"names":["isInitFromTable","element","children","length","nodeName","isInitFromDiv","querySelectorAll","inject","Container","customElement","WidgetBase","generateBindables","constants","OptionsBuilder","TemplateGatherer","PDF","Grid","elementPrefix","Element","widgetBase","container","optionsBuilder","templateGatherer","control","useRootElement","beforeInitialize","_beforeInitialize","options","linkViewModel","useContainer","bind","ctx","overrideCtx","useParentCtx","attached","useElement","target","document","createElement","appendChild","kNoInit","recreate","templates","util","getChildrenVMs","useTemplates","kWidget","columns","gridToolbars","forEach","push","getOptions","column","toolbar","o","template","destroy","detached"],"mappings":"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","file":"grid/grid.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\nimport {OptionsBuilder} from '../common/options-builder';\r\nimport {TemplateGatherer} from '../common/template-gatherer';\r\nimport {PDF} from '../pdf/pdf'; //eslint-disable-line no-unused-vars\r\n\r\n@customElement(`${constants.elementPrefix}grid`)\r\n@generateBindables('kendoGrid')\r\n@inject(Element, WidgetBase, Container, OptionsBuilder, TemplateGatherer)\r\nexport class Grid {\r\n\r\n  constructor(element, widgetBase, container, optionsBuilder, templateGatherer) {\r\n    this.element = element;\r\n    this.templateGatherer = templateGatherer;\r\n    this.optionsBuilder = optionsBuilder;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoGrid')\r\n                        .useRootElement(this.element)\r\n                        .beforeInitialize(options => this._beforeInitialize(options))\r\n                        .linkViewModel(this)\r\n                        .useContainer(container);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    // if <table> exists, initialize on that\r\n    // if <div> exists, initialize on that\r\n    // if neither exists, create <div>\r\n    // grid needs to be initialized on a div https://github.com/aurelia-ui-toolkits/aurelia-kendoui-bridge/issues/358\r\n    if (isInitFromDiv(this.element)) {\r\n      this.widgetBase.useElement(this.element.querySelectorAll('div')[0]);\r\n    } else if (isInitFromTable(this.element)) {\r\n      this.widgetBase.useElement(this.element.children[0]);\r\n    } else {\r\n      let target = document.createElement('div');\r\n      this.element.appendChild(target);\r\n      this.widgetBase.useElement(target);\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.templateGatherer.useTemplates(this, 'kendoGrid', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  _beforeInitialize(options) {\r\n    let columns = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}col`);\r\n    let gridToolbars = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}grid-toolbar`);\r\n\r\n    // allow for both column definitions via HTML and via an array of columns\r\n    if (columns && columns.length > 0) {\r\n      options.columns = [];\r\n\r\n      columns.forEach(column => {\r\n        options.columns.push(this.optionsBuilder.getOptions(column, 'GridColumn'));\r\n      });\r\n    }\r\n\r\n    if (gridToolbars && gridToolbars.length > 0) {\r\n      let toolbar = gridToolbars[0];\r\n      let o = this.optionsBuilder.getOptions(toolbar, 'GridToolbarItem');\r\n      if (o.template) {\r\n        options.toolbar = o.template;\r\n      } else {\r\n        options.toolbar = o;\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\n// if the first child node is a table tag\r\n// then the user wants to initialize the Kendo Grid from an\r\n// existing table\r\nfunction isInitFromTable(element) {\r\n  return element.children.length > 0 && element.children[0].nodeName === 'TABLE';\r\n}\r\n\r\nfunction isInitFromDiv(element) {\r\n  return element.querySelectorAll('div').length > 0;\r\n}\r\n"]}