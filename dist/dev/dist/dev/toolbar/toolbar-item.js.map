{"version":3,"sources":["toolbar/toolbar-item.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ,c,sBAAA,Q;AAAU,mB,sBAAA,a;;AACV,Y,+BAAA,M;;AACA,e,oBAAA,S;;AACA,uB,qBAAA,iB;;AACA,sB,2BAAA,gB;;AACA,oB,yBAAA,c;;;6BAKK,W,WAHZ,cAAiB,UAAU,aAA3B,kB,UACA,kBAAkB,aAAlB,C,UACA,OAAO,gBAAP,EAAyB,cAAzB,C,UAEE,SAAY,UAAU,aAAtB,c,UACA,SAAY,UAAU,aAAtB,yB;AAED,6BAAY,gBAAZ,EAA8B,cAA9B,EAA8C;AAAA;;AAAA;;AAAA;;AAC5C,eAAK,gBAAL,GAAwB,gBAAxB;AACA,eAAK,cAAL,GAAsB,cAAtB;AACD;;8BAED,U,yBAAa;AAAA;;AACX,eAAK,gBAAL,CAAsB,YAAtB,CAAmC,IAAnC,EAAyC,aAAzC,EAAwD,KAAK,SAA7D;;AAEA,cAAI,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA1C,EAA6C;AAC3C,iBAAK,QAAL,GAAgB,EAAhB;;AAEA,iBAAK,OAAL,CAAa,OAAb,CAAqB,gBAAQ;AAC3B,oBAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,UAAL,EAAnB;AACD,aAFD;AAGD;;AAED,iBAAO,KAAK,cAAL,CAAoB,UAApB,CAA+B,IAA/B,EAAqC,aAArC,CAAP;AACD,S;;;;;;iBApB2D,E;;;;;iBACS,E","file":"toolbar/toolbar-item.js","sourceRoot":"/source/","sourcesContent":["import {children, customElement} from 'aurelia-templating';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {constants} from '../common/constants';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {TemplateGatherer} from '../common/template-gatherer';\r\nimport {OptionsBuilder} from '../common/options-builder';\r\n\r\n@customElement(`${constants.elementPrefix}toolbar-item`)\r\n@generateBindables('ToolBarItem')\r\n@inject(TemplateGatherer, OptionsBuilder)\r\nexport class ToolbarItem {\r\n  @children(`${constants.elementPrefix}template`) templates = [];\r\n  @children(`${constants.elementPrefix}toolbar-item-button`) buttons = [];\r\n\r\n  constructor(templateGatherer, optionsBuilder) {\r\n    this.templateGatherer = templateGatherer;\r\n    this.optionsBuilder = optionsBuilder;\r\n  }\r\n\r\n  getOptions() {\r\n    this.templateGatherer.useTemplates(this, 'ToolBarItem', this.templates);\r\n\r\n    if (this.buttons && this.buttons.length > 0) {\r\n      this.kButtons = [];\r\n\r\n      this.buttons.forEach(item => {\r\n        this.kButtons.push(item.getOptions());\r\n      });\r\n    }\r\n\r\n    return this.optionsBuilder.getOptions(this, 'ToolBarItem');\r\n  }\r\n}\r\n"]}