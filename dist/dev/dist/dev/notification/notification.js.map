{"version":3,"sources":["notification/notification.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAQ,Y,+BAAA,M;;AACA,mB,sBAAA,a;AAAe,mB,sBAAA,a;;AACf,gB,qBAAA,U;;AACA,uB,qBAAA,iB;;AACA,e,oBAAA,S;;;8BAMK,Y,WAHZ,cAAiB,UAAU,aAA3B,kB,UACA,kBAAkB,mBAAlB,C,UACA,OAAO,OAAP,EAAgB,UAAhB,EAA4B,aAA5B,C;AAGC,8BAAY,OAAZ,EAAqB,UAArB,EAAiC,aAAjC,EAAgD;AAAA;;AAC9C,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,UAAL,GAAkB,WACG,OADH,CACW,mBADX,EAEG,aAFH,CAEiB,IAFjB,EAGG,gBAHH,CAGoB,aAHpB,CAAlB;AAID;;+BAED,I,iBAAK,G,EAAK;AACR,eAAK,OAAL,GAAe,GAAf;AACD,S;;+BAED,Q,uBAAW;AACT,cAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,iBAAK,QAAL;AACD;AACF,S;;+BAED,Q,uBAAW;AAAA;;AACT,eAAK,OAAL,GAAe,KAAK,UAAL,CAAgB,YAAhB,CAA6B;AAC1C,qBAAS,KAAK,OAD4B;AAE1C,uBAAW,KAAK,OAF0B;AAG1C,8BAAkB;AAAA,qBAAK,MAAK,gBAAL,CAAsB,CAAtB,CAAL;AAAA;AAHwB,WAA7B,CAAf;AAKD,S;;+BAED,gB,6BAAiB,O,EAAS;AACxB,cAAI,YAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB,CAAoC,KAAK,OAAzC,EAAqD,UAAU,aAA/D,2BAAhB;AACA,cAAI,aAAa,UAAU,MAAV,GAAmB,CAApC,EAAuC;AACrC,oBAAQ,SAAR,GAAoB,EAApB;;AAEA,sBAAU,OAAV,CAAkB;AAAA,qBAAY,QAAQ,SAAR,CAAkB,IAAlB,CAAuB;AACnD,sBAAM,UAAS,IADoC;AAEnD,0BAAU;AAAA,yBAAM,UAAS,QAAf;AAAA;AAFyC,eAAvB,CAAZ;AAAA,aAAlB;AAID;AACF,S;;+BAED,M,qBAAS;AACP,eAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAA7B;AACD,S","file":"notification/notification.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\r\nimport {customElement, ViewResources} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\nimport 'kendo.notification.min';\r\n\r\n@customElement(`${constants.elementPrefix}notification`)\r\n@generateBindables('kendoNotification')\r\n@inject(Element, WidgetBase, ViewResources)\r\nexport class Notification {\r\n\r\n  constructor(element, widgetBase, viewResources) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoNotification')\r\n                        .linkViewModel(this)\r\n                        .useViewResources(viewResources);\r\n  }\r\n\r\n  bind(ctx) {\r\n    this.$parent = ctx;\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    this.kWidget = this.widgetBase.createWidget({\r\n      element: this.element,\r\n      parentCtx: this.$parent,\r\n      beforeInitialize: e => this.beforeInitialize(e)\r\n    });\r\n  }\r\n\r\n  beforeInitialize(options) {\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}notification-template`);\r\n    if (templates && templates.length > 0) {\r\n      options.templates = [];\r\n\r\n      templates.forEach(template => options.templates.push({\r\n        type: template.type,\r\n        template: () => template.template\r\n      }));\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n}\r\n"]}