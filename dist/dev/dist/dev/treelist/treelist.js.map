{"version":3,"sources":["treelist/treelist.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAQ,Y,+BAAA,M;AAAQ,e,+BAAA,S;;AACR,mB,sBAAA,a;;AACA,gB,qBAAA,U;;AACA,uB,qBAAA,iB;;AACA,e,oBAAA,S;;AACA,oB,yBAAA,c;;AACA,S,WAAA,G;;;0BAKK,Q,WAHZ,cAAiB,UAAU,aAA3B,e,UACA,kBAAkB,eAAlB,C,UACA,OAAO,OAAP,EAAgB,UAAhB,EAA4B,SAA5B,EAAuC,cAAvC,C;AAGC,0BAAY,OAAZ,EAAqB,UAArB,EAAiC,SAAjC,EAA4C,cAA5C,EAA4D;AAAA;;AAAA;;AAC1D,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,cAAL,GAAsB,cAAtB;AACA,eAAK,UAAL,GAAkB,WACG,OADH,CACW,eADX,EAEG,cAFH,CAEkB,KAAK,OAFvB,EAGG,gBAHH,CAGoB;AAAA,mBAAW,MAAK,iBAAL,CAAuB,OAAvB,CAAX;AAAA,WAHpB,EAIG,aAJH,CAIiB,IAJjB,EAKG,YALH,CAKgB,SALhB,CAAlB;AAMD;;2BAED,I,iBAAK,G,EAAK,W,EAAa;AACrB,eAAK,UAAL,CAAgB,YAAhB,CAA6B,WAA7B;AACD,S;;2BAED,Q,uBAAW;AACT,cAAI,UAAU,KAAK,OAAL,CAAa,gBAAb,CAA8B,KAA9B,CAAd;AACA,cAAI,QAAQ,MAAR,GAAiB,CAArB,EAAwB;AACtB,iBAAK,UAAL,CAAgB,UAAhB,CAA2B,QAAQ,CAAR,CAA3B;AACD,WAFD,MAEO;AACL,gBAAI,SAAS,SAAS,aAAT,CAAuB,KAAvB,CAAb;AACA,iBAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;AACA,iBAAK,UAAL,CAAgB,UAAhB,CAA2B,MAA3B;AACD;;AAED,cAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,iBAAK,QAAL;AACD;AACF,S;;2BAED,Q,uBAAW;AACT,eAAK,OAAL,GAAe,KAAK,UAAL,CAAgB,QAAhB,EAAf;AACD,S;;2BAED,iB,8BAAkB,O,EAAS;AAAA;;AACzB,cAAI,UAAU,KAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB,CAAoC,KAAK,OAAzC,EAAqD,UAAU,aAA/D,cAAd;;AAEA,cAAI,WAAW,QAAQ,MAAR,GAAiB,CAAhC,EAAmC;AACjC,oBAAQ,OAAR,GAAkB,EAAlB;;AAEA,oBAAQ,OAAR,CAAgB,kBAAU;AACxB,sBAAQ,OAAR,CAAgB,IAAhB,CAAqB,OAAK,cAAL,CAAoB,UAApB,CAA+B,MAA/B,EAAuC,gBAAvC,CAArB;AACD,aAFD;AAGD;AACF,S;;2BAED,O,sBAAU;AACR,eAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAA7B;AACD,S;;2BAED,Q,uBAAW;AACT,eAAK,OAAL;AACD,S","file":"treelist/treelist.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\nimport {OptionsBuilder} from '../common/options-builder';\r\nimport {PDF} from '../pdf/pdf'; //eslint-disable-line no-unused-vars\r\n\r\n@customElement(`${constants.elementPrefix}tree-list`)\r\n@generateBindables('kendoTreeList')\r\n@inject(Element, WidgetBase, Container, OptionsBuilder)\r\nexport class TreeList  {\r\n\r\n  constructor(element, widgetBase, container, optionsBuilder) {\r\n    this.element = element;\r\n    this.optionsBuilder = optionsBuilder;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoTreeList')\r\n                        .useRootElement(this.element)\r\n                        .beforeInitialize(options => this._beforeInitialize(options))\r\n                        .linkViewModel(this)\r\n                        .useContainer(container);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    let targets = this.element.querySelectorAll('div');\r\n    if (targets.length > 0) {\r\n      this.widgetBase.useElement(targets[0]);\r\n    } else {\r\n      let target = document.createElement('div');\r\n      this.element.appendChild(target);\r\n      this.widgetBase.useElement(target);\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  _beforeInitialize(options) {\r\n    let columns = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}tree-col`);\r\n    // allow for both column definitions via HTML and via an array of columns\r\n    if (columns && columns.length > 0) {\r\n      options.columns = [];\r\n\r\n      columns.forEach(column => {\r\n        options.columns.push(this.optionsBuilder.getOptions(column, 'TreeListColumn'));\r\n      });\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n"]}