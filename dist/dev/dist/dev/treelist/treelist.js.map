{"version":3,"sources":["treelist/treelist.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ,Y,+BAAA,M;;AACA,mB,sBAAA,a;AAAe,c,sBAAA,Q;AAAU,mB,sBAAA,a;;AACzB,gB,qBAAA,U;;AACA,uB,qBAAA,iB;;AACA,e,oBAAA,S;;AACA,oB,yBAAA,c;;AACA,S,WAAA,G;;;0BAQK,Q,WAHZ,cAAiB,UAAU,aAA3B,e,UACA,kBAAkB,eAAlB,C,UACA,OAAO,OAAP,EAAgB,UAAhB,EAA4B,aAA5B,EAA2C,cAA3C,C,UAGE,SAAY,UAAU,aAAtB,c;AAED,0BAAY,OAAZ,EAAqB,UAArB,EAAiC,aAAjC,EAAgD,cAAhD,EAAgE;AAAA;;AAAA;;AAC9D,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,cAAL,GAAsB,cAAtB;AACA,eAAK,UAAL,GAAkB,WACG,OADH,CACW,eADX,EAEG,aAFH,CAEiB,IAFjB,EAGG,gBAHH,CAGoB,aAHpB,CAAlB;AAID;;2BAED,I,iBAAK,G,EAAK;AACR,eAAK,OAAL,GAAe,GAAf;AACD,S;;2BAID,Q,uBAAW;AACT,cAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,iBAAK,QAAL;AACD;AACF,S;;2BAED,Q,uBAAW;AAAA;;AACT,cAAI,UAAU,KAAK,OAAnB;;AAEA,eAAK,OAAL,GAAe,KAAK,UAAL,CAAgB,YAAhB,CAA6B;AAC1C,qBAAS,OADiC;AAE1C,uBAAW,KAAK,OAF0B;AAG1C,8BAAkB,0BAAC,CAAD;AAAA,qBAAO,MAAK,iBAAL,CAAuB,CAAvB,CAAP;AAAA;AAHwB,WAA7B,CAAf;AAKD,S;;2BAED,iB,8BAAkB,O,EAAS;AAAA;;AAEzB,cAAI,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA1C,EAA6C;AAC3C,oBAAQ,OAAR,GAAkB,EAAlB;;AAEA,iBAAK,OAAL,CAAa,OAAb,CAAqB,kBAAU;AAC7B,sBAAQ,OAAR,CAAgB,IAAhB,CAAqB,OAAK,cAAL,CAAoB,UAApB,CAA+B,MAA/B,EAAuC,gBAAvC,CAArB;AACD,aAFD;AAGD;AACF,S;;2BAED,Q,uBAAW;AACT,eAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAA7B;AACD,S;;;;;;iBA9CyD,E","file":"treelist/treelist.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\r\nimport {customElement, children, ViewResources} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\nimport {OptionsBuilder} from '../common/options-builder';\r\nimport {PDF} from '../pdf/pdf'; //eslint-disable-line no-unused-vars\r\nimport 'kendo.data.signalr.min';\r\nimport 'kendo.filtercell.min';\r\nimport 'kendo.treelist.min';\r\n\r\n@customElement(`${constants.elementPrefix}tree-list`)\r\n@generateBindables('kendoTreeList')\r\n@inject(Element, WidgetBase, ViewResources, OptionsBuilder)\r\nexport class TreeList  {\r\n\r\n  @children(`${constants.elementPrefix}tree-col`) columns = [];\r\n\r\n  constructor(element, widgetBase, viewResources, optionsBuilder) {\r\n    this.element = element;\r\n    this.optionsBuilder = optionsBuilder;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoTreeList')\r\n                        .linkViewModel(this)\r\n                        .useViewResources(viewResources);\r\n  }\r\n\r\n  bind(ctx) {\r\n    this.$parent = ctx;\r\n  }\r\n\r\n  // initialization in bind() is giving issues in some scenarios\r\n  // so, attached() is used for this control\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let element = this.element;\r\n\r\n    this.kWidget = this.widgetBase.createWidget({\r\n      element: element,\r\n      parentCtx: this.$parent,\r\n      beforeInitialize: (o) => this._beforeInitialize(o)\r\n    });\r\n  }\r\n\r\n  _beforeInitialize(options) {\r\n    // allow for both column definitions via HTML and via an array of columns\r\n    if (this.columns && this.columns.length > 0) {\r\n      options.columns = [];\r\n\r\n      this.columns.forEach(column => {\r\n        options.columns.push(this.optionsBuilder.getOptions(column, 'TreeListColumn'));\r\n      });\r\n    }\r\n  }\r\n\r\n  detached() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n}\r\n"]}