{"version":3,"sources":["listview/listview.js"],"names":["inject","Container","customElement","WidgetBase","generateBindables","constants","ListView","elementPrefix","Element","element","widgetBase","container","control","useElement","linkViewModel","useContainer","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","templates","util","getChildrenVMs","useTemplates","kWidget","destroy","detached"],"mappings":";;;;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;0BAKKC,Q,WAHZJ,cAAiBG,UAAUE,aAA3B,e,UACAH,kBAAkB,eAAlB,C,UACAJ,OAAOQ,OAAP,EAAgBL,UAAhB,EAA4BF,SAA5B,C;AAGC,0BAAYQ,OAAZ,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAC1C,eAAKF,OAAL,GAAeA,OAAf;AACA,eAAKC,UAAL,GAAkBA,WACGE,OADH,CACW,eADX,EAEGC,UAFH,CAEc,KAAKJ,OAFnB,EAGGK,aAHH,CAGiB,IAHjB,EAIGC,YAJH,CAIgBJ,SAJhB,CAAlB;AAKD;;2BAEDK,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKR,UAAL,CAAgBS,YAAhB,CAA6BD,WAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;2BAEDA,Q,uBAAW;AACT,cAAIC,YAAY,KAAKb,UAAL,CAAgBc,IAAhB,CAAqBC,cAArB,CAAoC,KAAKhB,OAAzC,EAAqDJ,UAAUE,aAA/D,cAAhB;AACA,eAAKG,UAAL,CAAgBgB,YAAhB,CAA6B,IAA7B,EAAmC,eAAnC,EAAoDH,SAApD;;AAEA,eAAKI,OAAL,GAAe,KAAKjB,UAAL,CAAgBY,QAAhB,EAAf;AACD,S;;2BAEDM,O,sBAAU;AACR,eAAKlB,UAAL,CAAgBkB,OAAhB,CAAwB,KAAKD,OAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"listview/listview.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}list-view`)\r\n@generateBindables('kendoListView')\r\n@inject(Element, WidgetBase, Container)\r\nexport class ListView  {\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoListView')\r\n                        .useElement(this.element)\r\n                        .linkViewModel(this)\r\n                        .useContainer(container);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoListView', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n"]}