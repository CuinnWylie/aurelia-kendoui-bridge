{"version":3,"sources":["autocomplete/autocomplete.js"],"names":["inject","Container","customElement","WidgetBase","generateBindables","constants","AutoComplete","elementPrefix","Element","element","widgetBase","container","control","useRootElement","linkViewModel","useContainer","useValueBinding","bindToKendo","bind","ctx","overrideCtx","useParentCtx","attached","inputs","querySelectorAll","length","useElement","target","document","createElement","appendChild","kNoInit","recreate","templates","util","getChildrenVMs","useTemplates","kWidget","propertyChanged","property","newValue","oldValue","handlePropertyChanged","destroy","detached"],"mappings":";;;;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;8BAKKC,Y,WAHZJ,cAAiBG,UAAUE,aAA3B,kB,UACAH,kBAAkB,mBAAlB,C,UACAJ,OAAOQ,OAAP,EAAgBL,UAAhB,EAA4BF,SAA5B,C;AAGC,8BAAYQ,OAAZ,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAC1C,eAAKF,OAAL,GAAeA,OAAf;AACA,eAAKC,UAAL,GAAkBA,WACGE,OADH,CACW,mBADX,EAEGC,cAFH,CAEkB,KAAKJ,OAFvB,EAGGK,aAHH,CAGiB,IAHjB,EAIGC,YAJH,CAIgBJ,SAJhB,EAKGK,eALH,GAMGC,WANH,CAMe,UANf,EAM2B,QAN3B,EAOGA,WAPH,CAOe,WAPf,EAO4B,UAP5B,CAAlB;AAQD;;+BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKV,UAAL,CAAgBW,YAAhB,CAA6BD,WAA7B;AACD,S;;+BAEDE,Q,uBAAW;AACT,cAAIC,SAAS,KAAKd,OAAL,CAAae,gBAAb,CAA8B,OAA9B,CAAb;AACA,cAAID,OAAOE,MAAP,GAAgB,CAApB,EAAuB;AACrB,iBAAKf,UAAL,CAAgBgB,UAAhB,CAA2BH,OAAO,CAAP,CAA3B;AACD,WAFD,MAEO;AACL,gBAAII,SAASC,SAASC,aAAT,CAAuB,OAAvB,CAAb;AACA,iBAAKpB,OAAL,CAAaqB,WAAb,CAAyBH,MAAzB;AACA,iBAAKjB,UAAL,CAAgBgB,UAAhB,CAA2BC,MAA3B;AACD;;AAED,cAAI,CAAC,KAAKI,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;+BAEDA,Q,uBAAW;AACT,cAAIC,YAAY,KAAKvB,UAAL,CAAgBwB,IAAhB,CAAqBC,cAArB,CAAoC,KAAK1B,OAAzC,EAAqDJ,UAAUE,aAA/D,cAAhB;AACA,eAAKG,UAAL,CAAgB0B,YAAhB,CAA6B,IAA7B,EAAmC,mBAAnC,EAAwDH,SAAxD;;AAEA,eAAKI,OAAL,GAAe,KAAK3B,UAAL,CAAgBsB,QAAhB,EAAf;AACD,S;;+BAEDM,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAC5C,eAAK/B,UAAL,CAAgBgC,qBAAhB,CAAsC,KAAKL,OAA3C,EAAoDE,QAApD,EAA8DC,QAA9D,EAAwEC,QAAxE;AACD,S;;+BAEDE,O,sBAAU;AACR,eAAKjC,UAAL,CAAgBiC,OAAhB,CAAwB,KAAKN,OAA7B;AACD,S;;+BAEDO,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"autocomplete/autocomplete.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}autocomplete`)\r\n@generateBindables('kendoAutoComplete')\r\n@inject(Element, WidgetBase, Container)\r\nexport class AutoComplete {\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoAutoComplete')\r\n                        .useRootElement(this.element)\r\n                        .linkViewModel(this)\r\n                        .useContainer(container)\r\n                        .useValueBinding()\r\n                        .bindToKendo('kEnabled', 'enable')\r\n                        .bindToKendo('kReadOnly', 'readonly');\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    let inputs = this.element.querySelectorAll('input');\r\n    if (inputs.length > 0) {\r\n      this.widgetBase.useElement(inputs[0]);\r\n    } else {\r\n      let target = document.createElement('input');\r\n      this.element.appendChild(target);\r\n      this.widgetBase.useElement(target);\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoAutoComplete', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  propertyChanged(property, newValue, oldValue) {\r\n    this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n"]}