{"version":3,"sources":["autocomplete/autocomplete.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAQ,Y,+BAAA,M;;AACA,mB,sBAAA,a;AAAe,mB,sBAAA,a;;AACf,gB,qBAAA,U;;AACA,uB,qBAAA,iB;;AACA,e,oBAAA,S;;;8BAOK,Y,WAHZ,cAAiB,UAAU,aAA3B,kB,UACA,kBAAkB,mBAAlB,C,UACA,OAAO,OAAP,EAAgB,UAAhB,EAA4B,aAA5B,C;AAGC,8BAAY,OAAZ,EAAqB,UAArB,EAAiC,aAAjC,EAAgD;AAAA;;AAC9C,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,UAAL,GAAkB,WACG,OADH,CACW,mBADX,EAEG,aAFH,CAEiB,IAFjB,EAGG,gBAHH,CAGoB,aAHpB,EAIG,eAJH,GAKG,WALH,CAKe,UALf,EAK2B,QAL3B,EAMG,WANH,CAMe,WANf,EAM4B,UAN5B,CAAlB;AAOD;;+BAED,I,iBAAK,G,EAAK;AACR,eAAK,OAAL,GAAe,GAAf;AACD,S;;+BAED,Q,uBAAW;AACT,cAAI,SAAS,KAAK,OAAL,CAAa,gBAAb,CAA8B,OAA9B,CAAb;AACA,cAAI,OAAO,MAAP,GAAgB,CAApB,EAAuB;AACrB,iBAAK,MAAL,GAAc,OAAO,CAAP,CAAd;AACD,WAFD,MAEO;AACL,iBAAK,MAAL,GAAc,SAAS,aAAT,CAAuB,OAAvB,CAAd;AACA,iBAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,MAA9B;AACD;;AAED,cAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,iBAAK,QAAL;AACD;AACF,S;;+BAED,Q,uBAAW;AACT,cAAI,YAAY,KAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB,CAAoC,KAAK,OAAzC,EAAqD,UAAU,aAA/D,cAAhB;AACA,eAAK,UAAL,CAAgB,YAAhB,CAA6B,IAA7B,EAAmC,mBAAnC,EAAwD,SAAxD;;AAEA,eAAK,OAAL,GAAe,KAAK,UAAL,CAAgB,YAAhB,CAA6B;AAC1C,yBAAa,KAAK,OADwB;AAE1C,qBAAS,KAAK,MAF4B;AAG1C,uBAAW,KAAK;AAH0B,WAA7B,CAAf;AAKD,S;;+BAED,e,4BAAgB,Q,EAAU,Q,EAAU,Q,EAAU;AAC5C,eAAK,UAAL,CAAgB,qBAAhB,CAAsC,KAAK,OAA3C,EAAoD,QAApD,EAA8D,QAA9D,EAAwE,QAAxE;AACD,S;;+BAED,M,qBAAS;AACP,eAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAA7B;AACD,S","file":"autocomplete/autocomplete.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\r\nimport {customElement, ViewResources} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\nimport 'kendo.autocomplete.min';\r\nimport 'kendo.virtuallist.min';\r\n\r\n@customElement(`${constants.elementPrefix}autocomplete`)\r\n@generateBindables('kendoAutoComplete')\r\n@inject(Element, WidgetBase, ViewResources)\r\nexport class AutoComplete {\r\n\r\n  constructor(element, widgetBase, viewResources) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n                        .control('kendoAutoComplete')\r\n                        .linkViewModel(this)\r\n                        .useViewResources(viewResources)\r\n                        .useValueBinding()\r\n                        .bindToKendo('kEnabled', 'enable')\r\n                        .bindToKendo('kReadOnly', 'readonly');\r\n  }\r\n\r\n  bind(ctx) {\r\n    this.$parent = ctx;\r\n  }\r\n\r\n  attached() {\r\n    let inputs = this.element.querySelectorAll('input');\r\n    if (inputs.length > 0) {\r\n      this.target = inputs[0];\r\n    } else {\r\n      this.target = document.createElement('input');\r\n      this.element.appendChild(this.target);\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoAutoComplete', templates);\r\n\r\n    this.kWidget = this.widgetBase.createWidget({\r\n      rootElement: this.element,\r\n      element: this.target,\r\n      parentCtx: this.$parent\r\n    });\r\n  }\r\n\r\n  propertyChanged(property, newValue, oldValue) {\r\n    this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\r\n  }\r\n\r\n  unbind() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n}\r\n"]}